---
export interface Props {
  prevPath?: string;
  nextPath?: string;
}
const { prevPath, nextPath } = Astro.props;
---

<>
  <ul>
    <li>
      {
        prevPath && (
          <a href={prevPath} class="el_btn el_postNavBtn el_postNavBtn__prev">
            まえへ
          </a>
        )
      }
    </li>
    <li>
      <a href="/portfolio/works" class="el_btn el_postNavBtn el_postNavBtn__list">一覧</a>
    </li>
    <li>
      {
        nextPath && (
          <a href={nextPath} class="el_btn el_postNavBtn el_postNavBtn__next">
            つぎへ
          </a>
        )
      }
    </li>
  </ul>
</>

<style lang="scss">
  @use '../styles/mixin/' as mix;
  @use '../styles/functions/' as *;

  ul {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    width: 90%;
    margin: 0 auto;
    padding: var(--size-space-sm) 0;
    gap: var(--size-space-sm);

    @include mix.mq(md) {
      width: 80%;
    }
  }

  .el_postNavBtn {
    width: 100%;
    padding: 0.5em 0;
    border: 2px solid color(--c-black);
    box-shadow: 3px 3px 0 color(--c-black);
    font-size: rem(16px);
    font-weight: bold;
    text-align: center;

    &__prev,
    &__next {
      background: color(--c-secondary);
    }

    &__prev {
      border-radius: 50px 10px 10px 50px;
    }

    &__next {
      border-radius: 10px 50px 50px 10px;
    }

    &__list {
      border-radius: 10px;
      background: color(--c-tertiary);
    }

    @include mix.mq(lg) {
      font-size: rem(18px);
    }
  }
</style>
