---
import type { MarkdownInstance } from 'astro';
import type { PostType } from '../types';
import Base from './Base.astro';
import Header from '../components/Header.astro';
import Grid from '../layout/Grid.astro';
import Footer from '../components/Footer.astro';

import '../styles/entry.scss';
import '../styles/element/_thumbnails.scss';
import { thumbnailsClassType } from '../scripts/thumbnailsClassType';

// paginationの作成
export interface Props {
  content: PostType;
}
const { content } = Astro.props;
const currentPagePath = Astro.url.pathname;
const allPosts = await Astro.glob<PostType>('../pages/posts/**/*.md');
const sortedAllPosts = allPosts.sort(
  (a, b) =>
    new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf()
);
const { prev, next } = getPrevAndNextPosts(currentPagePath, sortedAllPosts);
function getPrevAndNextPosts(currentSlug: string, posts: MarkdownInstance<PostType>[]) {
  const index = posts.findIndex(({ url }) => url === currentSlug);
  return {
    // 指定indexのpostがなければnullを返す
    prev: posts[index + 1] ?? null,
    next: posts[index - 1] ?? null,
  };
}
const paginationProps = {
  ...(prev && {
    prevPath: prev.url,
  }),
  ...(next && {
    nextPath: next.url,
  }),
};

// contentのプロパティが未設定の場合はクラスを付与
const displayCheck = (key: string | {}) => {
  if (key === null) {
    return 'is_empty';
  }
  return;
};
---

<Base>
  <Header />
  <main class="ly_post">
    <Grid type={'arch'}>
      <div class="bl_post_meta">
        <div
          class:list={[
            'bl_post_thumbnails',
            'el_thumbnails',
            thumbnailsClassType(content.thumbnailType),
          ]}
        >
          <img
            src="/image/empty.gif"
            alt={content.title + 'のサムネイル画像'}
            data-src={content.thumbnail}
            width="255"
            height="240"
            loading="lazy"
          />
        </div><!-- /.bl_post_thumbnails -->

        <div class="bl_post_meta_titleWrap">
          <div class="bl_post_title bl_common_box">
            <p>{content.title}</p>
          </div><!-- /.bl_post_title -->

          <div class:list={['bl_post_github', displayCheck(content.github)]}>
            <a
              href={content.github}
              class="el_btn el_circleBtn el_circleBtn__blue"
              aria-label="GitHub"
              target="_blank"
              rel="nofollow noopener noreferrer"
            >
              <img
                src="/image/empty.gif"
                alt="GitHub"
                width="20"
                height="20"
                data-src="/icon/github.svg"
                loading="lazy"
              />
            </a>
          </div><!-- /.bl_post_github -->
        </div><!-- /.bl_post_meta_titleWrap -->
      </div><!-- /.bl_post_meta -->

      <div class="bl_post_contents">
        <div class="bl_post_comment bl_entry">
          <slot />
        </div><!-- /.bl_post_comment -->

        <div class:list={['bl_post_link', displayCheck(content.link)]}>
          <a
            class="el_btn el_basicBtn"
            href={content.link}
            target="_blank"
            rel="noopener noreferrer"
          >
            サイトをみる
          </a>
        </div><!-- /.bl_post_link -->

        <div class="bl_post_info">
          <dl>
            <dt>担当領域</dt>
            <dd class="bl_post_info_role">
              <ul>
                {content.role && content.role.map(value => <li>{value}</li>)}
              </ul>
            </dd><!-- /.bl_post_info_subSkill -->
          </dl>
          <dl>
            <dt>使用技術</dt>
            <dd class="bl_post_info_skill">
              <ul>
                {content.skill && content.skill.map(value => <li>{value}</li>)}
              </ul>
            </dd>
            <dd class:list={['bl_post_info_subSkill', displayCheck(content.subSkills)]}>
              <ul>
                {
                  content.subSkills &&
                    Object.entries(content.subSkills).map(([key, value]) => (
                      <li>
                        {key}
                        <span>:</span>
                        {value}
                      </li>
                    ))
                }
              </ul>
            </dd><!-- /.bl_post_info_subSkill -->
          </dl>
          <dl>
            <dt>制作期間</dt>
            <dd>{content.period}</dd>
          </dl>
          <dl class="bl_post_info_feature">
            <dt>機能</dt>
            <dd>
              <ul>
                {content.feature.map((list: string) => <li>{list}</li>)}
              </ul>
            </dd>
          </dl>
        </div><!-- /.bl_post_info -->

        <div class:list={['bl_post_mockup', displayCheck(content.mockup)]}>
          <div class="bl_post_mockup_pc">
            <img
              src="/image/empty.gif"
              alt="パソコンサイズのスクリーンショット"
              data-src={content.mockup && content.mockup.pc}
              width="311"
              height="222"
              loading="lazy"
            />
          </div><!-- /.bl_post_mockup_pc -->
          <div class="bl_post_mockup_mobile">
            <img
              src="/image/empty.gif"
              alt="スマホサイズのスクリーンショット"
              data-src={content.mockup && content.mockup.mobile}
              width="96"
              height="190"
              loading="lazy"
            />
          </div><!-- /.bl_post_mockup_mobile -->
        </div><!-- /.bl_post_mockup -->
      </div><!-- /.bl_post_contents -->
    </Grid>
  </main><!-- /.ly_main -->

  <Footer {paginationProps} />
</Base>

<style lang="scss">
  @use '../styles/mixin/' as mix;
  @use '../styles/functions/' as *;
  @use '../styles/variables/other' as *;

  .ly_post {
    margin-top: calc(56px + var(--header-height));
  }

  .bl_post_meta {
    margin-top: -64px;
  }

  .bl_post_thumbnails {
    max-width: 400px;
    margin: 0 auto;
    border-radius: 10px;
  }

  .bl_post_meta_titleWrap {
    position: relative;
    width: fit-content;
    margin: 0 auto;
  }

  .bl_post_title {
    position: relative;
    bottom: 16px;
    width: fit-content;
    min-width: 240px;
    max-width: 300px;
    margin: 0 auto;
    padding: 0.5em 1em;
    background: color(--c-primary-accent);

    p {
      font-size: rem(16px);
      font-weight: bold;
      letter-spacing: 1px;
      text-align: center;
    }

    @include mix.mq(md) {
      min-width: 320px;
      max-width: 375px;

      p {
        font-size: rem(24px);
      }
    }
  }

  .bl_post_github {
    position: absolute;
    right: -8px;
    bottom: -4px;

    &.is_empty {
      display: none;
    }

    @include mix.mq(lg) {
      a {
        width: 40px;
        height: 40px;
      }

      img {
        width: 20px !important;
        height: 20px !important;
      }
    }
  }

  .bl_post_link {
    text-align: center;

    a {
      justify-content: center;
      width: 50%;
      min-width: fit-content;
      max-width: 240px;
    }

    &.is_empty {
      display: none;
    }

    @include mix.mq(lg) {
      grid-column: 2 / 3;
      grid-row: 2 / 3;

      a {
        font-size: rem(16px);
      }
    }
  }

  .bl_post_contents {
    display: grid;
    margin: var(--size-space-xl) auto 0;
    gap: var(--size-space-xl);

    @include mix.mq(sm) {
      width: 90%;
    }

    @include mix.mq(md) {
      width: 80%;
    }

    @include mix.mq(lg) {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(3, auto);
      width: auto;
      column-gap: var(--size-space-md);
      row-gap: var(--size-space-lg);
    }
  }

  .bl_post_comment {
    @include mix.mq(lg) {
      grid-column: 2 / 3;
      grid-row: 1 / 2;
    }
  }

  .bl_post_info {
    display: flex;
    gap: var(--size-space-sm);
    flex-direction: column;

    dt {
      position: relative;
      padding-left: 1.5em;
      font-size: rem(16px);
      font-weight: bold;

      &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 0;
        width: 1em;
        height: 1em;
        transform: translateY(-50%);
        background: color(--c-post-hash);
        mask: url(#{$icon-path}/hash.svg) no-repeat center center / contain;
      }
    }

    dd {
      margin-top: 8px;
      word-break: break-all;
    }

    @include mix.mq(lg) {
      grid-column: 1 / 2;
      grid-row: 1 / 3;
    }
  }

  .bl_post_info_subSkill {
    ul {
      display: flex;
      flex-direction: column;
      gap: 0.2em;
    }

    span {
      display: inline-block;
      padding: 0 0.4em;
    }

    &.is_empty {
      display: none;
    }
  }

  .bl_post_info_feature {
    li {
      position: relative;
      padding-left: 1em;

      &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 0;
        width: 4px;
        height: 1px;
        transform: translateY(-50%);
        background: color(--c-black);
      }
    }
  }

  .bl_post_info_role,
  .bl_post_info_skill {
    ul {
      display: flex;
      flex-wrap: wrap;

      li {
        display: inline-block;

        &:not(:first-of-type) {
          position: relative;
          margin-left: 0.3em;
          padding-left: 0.8em;

          &::before {
            content: '/';
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(-50%);
          }
        }
      }
    }
  }

  .bl_post_mockup {
    position: relative;

    &.is_empty {
      display: none;
    }

    @include mix.mq(lg) {
      grid-column: 1 / 3;
      grid-row: 3 / 4;
    }
  }

  .bl_post_mockup_pc {
    aspect-ratio: 16/10;
    width: 100%;
    max-width: 584px;
    margin: 0 auto;
    overflow: hidden;
    border: 2px solid color(--c-black);
    border-radius: 10px;
    background: color(--c-bg-works);

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: top;
    }
  }

  .bl_post_mockup_mobile {
    position: absolute;
    right: 8px;
    bottom: -40px;
    width: calc(96 / 305 * 100%);
    max-width: 180px;

    img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
  }
</style>
